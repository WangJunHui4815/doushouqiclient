{"version":3,"sources":["gameEndCtrl.js"],"names":["cc","Class","extends","Component","properties","endInfoPanel","Node","start","restart","vv","net","send","node","active","showResult","results","log","result","label","addComponent","Label","string","js","formatStr","userId","score","parent"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,sBAAcL,GAAGM;AAhBT,KAHP;;AAsBL;;AAEA;;AAEAC,SA1BK,mBA0BI,CAER,CA5BI;AA8BLC,WA9BK,qBA8BM;AACPR,WAAGS,EAAH,CAAMC,GAAN,CAAUC,IAAV,CAAe,OAAf;AACA,aAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH,KAjCI;AAmCLC,cAnCK,sBAmCOC,OAnCP,EAmCgB;AACjBf,WAAGgB,GAAH,CAAO,aAAP;AACAhB,WAAGgB,GAAH,CAAOD,OAAP;AAFiB;AAAA;AAAA;;AAAA;AAGjB,iCAAkBA,OAAlB,8HAA2B;AAAA,oBAAnBE,MAAmB;;AACvB,oBAAIL,OAAO,IAAIZ,GAAGM,IAAP,EAAX;AACA,oBAAIY,QAAQN,KAAKO,YAAL,CAAkBnB,GAAGoB,KAArB,CAAZ;AACAF,sBAAMG,MAAN,GAAerB,GAAGsB,EAAH,CAAMC,SAAN,CAAgB,WAAhB,EAA6BN,OAAOO,MAApC,EAA4CP,OAAOQ,KAAnD,CAAf;AACAb,qBAAKc,MAAL,GAAc,KAAKrB,YAAnB;AACH;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASpB;;AAED;;AA9CK,CAAT","file":"gameEndCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\sprite\\controller","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        endInfoPanel: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    restart () {\r\n        cc.vv.net.send('ready')\r\n        this.node.active = false\r\n    },\r\n\r\n    showResult (results) {\r\n        cc.log(\"gameendctrl\")\r\n        cc.log(results)\r\n        for(let result of results) {\r\n            let node = new cc.Node()\r\n            let label = node.addComponent(cc.Label)\r\n            label.string = cc.js.formatStr(\"玩家%s 得分%s\", result.userId, result.score)\r\n            node.parent = this.endInfoPanel\r\n        }\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}